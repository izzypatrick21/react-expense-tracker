{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/AddTransaction.js","components/Balance.js","components/Header.js","components/IncomeExpense.js","components/Transaction.js","components/TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["AppReducer","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","floor","random","className","htmlFor","autoComplete","onChange","target","placeholder","Balance","total","map","reduce","tot","item","toFixed","Header","IncomeExpense","amounts","expense","acc","income","Transaction","sign","abs","onClick","TransactionList","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76505978.chunk.js","sourcesContent":["export default function AppReducer(state, action) {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter((transaction) => transaction.id !== action.payload)\n      }\n\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      }\n    default:\n      return state;\n  }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n//Initial state\nconst initialState = {\n  transactions: [],\n}\n\n//Create context\nexport const GlobalContext = createContext(initialState);\n\n//Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  //Actions\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (\n    <GlobalContext.Provider value={{\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}\n\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n\nfunction AddTransaction() {\n  const [text, setText] = useState(\"\");\n  const [amount, setAmount] = useState(0);\n\n  const { addTransaction } = useContext(GlobalContext);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    const newTransaction = {\n      id: Math.floor(Math.random() * 10000),\n      text,\n      amount: +amount\n    }\n    addTransaction(newTransaction)\n    setText('');\n    setAmount(0);\n  }\n  return (\n    <div>\n      <h3>Add new transaction</h3>\n      <form onSubmit={onSubmitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input type=\"text\" autoComplete=\"off\" value={text} onChange={(e) => setText(e.target.value)} id=\"text\" placeholder=\"Enter text...\" />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (enter negative numbers for expense, positive numbers for income)</label\n          >\n          <input type=\"number\" autoComplete=\"off\" value={amount} onChange={(e) => setAmount(e.target.value)} id=\"amount\" placeholder=\"Enter amount...\" />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </div>\n  )\n}\n\nexport default AddTransaction\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n\nfunction Balance() {\n  const { transactions } = useContext(GlobalContext);\n\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const total = amounts.reduce((tot, item) => (tot += item), 0).toFixed(2);\n\n  // let total = 0;\n  // for (var i in amounts) {\n  //   total += amounts[i];\n  // }\n\n  return (\n    <div>\n      <h3 id=\"balance\"> Balance : ${total} </h3>\n    </div>\n  )\n}\n\nexport default Balance\n","import React from 'react';\n\nfunction Header() {\n  return (\n    <h1>\n      Expense Tracker\n    </h1>\n  )\n}\n\nexport default Header\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nfunction IncomeExpense() {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n\n  const expense = (amounts\n    .filter((item) => item < 0)\n    .reduce((acc, item) => (acc += item), 0) * -1)\n    .toFixed(2);\n\n  const income = (amounts\n    .filter((item) => item > 0)\n    .reduce((acc, item) => (acc += item), 0))\n    .toFixed(2);\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money plus\"> {income} </p>\n      </div>\n\n      <div>\n        <h4>Expenses</h4>\n        <p id=\"money-minus\" className=\"money minus\"> {expense} </p>\n      </div>\n    </div>\n  )\n}\n\nexport default IncomeExpense\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n\nfunction Transaction({ transaction }) {\n  const { deleteTransaction } = useContext(GlobalContext);\n  const sign = transaction.amount < 0 ? '-' : '+';\n\n  return (\n    <li className={sign === \"-\" ? \"minus\" : \"plus\"}>\n      {transaction.text} <span>{sign}${Math.abs(transaction.amount)}</span> <button onClick={() => deleteTransaction(transaction.id)} className=\"delete-btn\">x</button>\n    </li>\n  )\n}\n\nexport default Transaction\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\nimport Transaction from './Transaction';\n\n\nfunction TransactionList() {\n  const { transactions } = useContext(GlobalContext);\n\n  return (\n    <div>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n        {\n          transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))\n        }\n      </ul>\n    </div>\n  )\n}\n\nexport default TransactionList\n","import './App.css';\nimport AddTransaction from './components/AddTransaction';\nimport Balance from './components/Balance';\nimport Header from './components/Header';\nimport IncomeExpense from './components/IncomeExpense';\nimport TransactionList from './components/TransactionList';\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalProvider>\n        <Header />\n        <Balance />\n        <IncomeExpense />\n        <TransactionList />\n        <AddTransaction />\n      </GlobalProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}